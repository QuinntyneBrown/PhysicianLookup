{"version":3,"sources":["./src/app/physicians/edit-physician/edit-physician.component.ts","./src/app/physicians/edit-physician/edit-physician.component.html","./src/app/physicians/physicians-routing.module.ts","./src/app/physicians/physicians.module.ts","./src/app/physicians/physicians.service.ts","./src/app/physicians/physicians/physicians.component.ts","./src/app/physicians/physicians/physicians.component.html"],"names":[],"mappings":"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","file":"src-app-physicians-physicians-module-es2015.js","sourcesContent":["import { Component, AfterViewInit, OnDestroy, OnInit } from '@angular/core';\nimport { PhysiciansService } from '../physicians.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Physician } from '../physician';\nimport { takeUntil, map } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'pl-edit-physician',\n  templateUrl: './edit-physician.component.html',\n  styleUrls: ['./edit-physician.component.scss']\n})\nexport class EditPhysicianComponent implements OnInit, OnDestroy {\n\n  public physician: Physician = {} as Physician;\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  public form = new FormGroup({     \n    firstname: new FormControl(this.physician.firstname, [Validators.required]),\n    lastname: new FormControl(this.physician.lastname, [Validators.required]), \n    street: new FormControl(this.physician.street, [Validators.required]),\n    city: new FormControl(this.physician.city, [Validators.required]),\n    province: new FormControl(this.physician.province, [Validators.required]),\n    postalCode: new FormControl(this.physician.postalCode, [Validators.required]),\n    phoneNumber: new FormControl(this.physician.phoneNumber, []),\n    emailAddress: new FormControl(this.physician.emailAddress, [Validators.email]),\n    website: new FormControl(this.physician.website, []),        \n  });\n  \n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private physiciansService: PhysiciansService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.physician.physicianId = this.activatedRoute.snapshot.params.id;\n\n    if(this.physician.physicianId) {\n      this.physiciansService.getById({ physicianId: this.activatedRoute.snapshot.params.id }).pipe(\n        map(x => {\n          this.form.patchValue({\n            firstname : x.firstname,\n            lastname : x.lastname,\n            street : x.street,\n            city : x.city,\n            province : x.province,\n            postalCode : x.postalCode,\n            phoneNumber : x.phoneNumber,\n            emailAddress : x.emailAddress,\n            website : x.website\n          });\n        })\n      ).subscribe();\n    }\n  }\n\n  public handleSaveClick(): void {\n    const physician: Physician = {} as Physician;\n\n    this.physician.firstname = this.form.value.firstname;\n    this.physician.lastname = this.form.value.lastname;\n    this.physician.street = this.form.value.street;\n    this.physician.city = this.form.value.city;\n    this.physician.province = this.form.value.province;\n    this.physician.postalCode = this.form.value.postalCode;\n    this.physician.phoneNumber = this.form.value.phoneNumber;\n    this.physician.emailAddress = this.form.value.emailAddress;\n    this.physician.website = this.form.value.website;\n\n    this.physiciansService.save({ physician: this.physician }).pipe(\n      takeUntil(this._destroyed)\n    ).subscribe(\n      () => this.form.reset(),\n      errorResponse => {\n        // handle error\n      }\n    );\n\n  }\n\n  public handleCancelClick(): void {\n    this.router.navigateByUrl('/');\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","<h1 *ngIf=\"!physician.physicianId\">Create Physician</h1>\n\n<h1 *ngIf=\"physician.physicianId\">Edit Physician</h1>\n\n<form novalidate autocomplete=\"off\" spellcheck=\"false\" [formGroup]=\"form\">\n    <mat-form-field>\n        <input matInput placeholder=\"Firstname\" id=\"firstname\" formControlName=\"firstname\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Lastname\" id=\"lastname\" formControlName=\"lastname\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Street\" id=\"street\" formControlName=\"street\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"City\" id=\"city\" formControlName=\"city\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Province\" id=\"province\" formControlName=\"province\">\n      </mat-form-field>      \n\n      <mat-form-field>\n        <input matInput placeholder=\"Postal Code\" id=\"postalCode\" formControlName=\"postalCode\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Phone Number\" id=\"phoneNumber\" formControlName=\"phoneNumber\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Email Address\" id=\"emailAddress\" formControlName=\"emailAddress\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Website\" id=\"website\" formControlName=\"website\">\n      </mat-form-field>\n\n</form>\n\n<div class=\"physicianEditor__actions\">\n  <button mat-raised-button (click)=\"handleSaveClick()\" color=\"primary\">Save</button>\n  <button mat-button (click)=\"handleCancelClick()\">Cancel</button>\n</div>","import { RouterModule, Routes } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { PhysiciansComponent } from './physicians/physicians.component';\r\nimport { EditPhysicianComponent } from './edit-physician/edit-physician.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: PhysiciansComponent },\r\n  { path: \"physicians/create\", component: EditPhysicianComponent },\r\n  { path: \"physicians/edit/:id\", component: EditPhysicianComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PhysiciansRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PhysiciansComponent } from './physicians/physicians.component';\nimport { PhysiciansRoutingModule } from './physicians-routing.module';\nimport { EditPhysicianComponent } from './edit-physician/edit-physician.component';\nimport { PhysiciansService } from './physicians.service';\nimport { SharedModule } from '../_shared/shared.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [PhysiciansComponent, EditPhysicianComponent],\n  providers: [\n    PhysiciansService\n  ],\n  imports: [\n    CommonModule,\n    PhysiciansRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class PhysiciansModule { }\n","import { Injectable, Inject } from '@angular/core';\nimport { baseUrl } from '../_core/constants';\nimport { HttpClient } from '@angular/common/http';\nimport { Physician } from './physician';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhysiciansService {\n\n  constructor(\n    @Inject(baseUrl) private _baseUrl: string,\n    private _client: HttpClient\n  ) { }\n\n  public getNearest(options: {longitude: number, latitude: number}): Observable<Physician[]> {\n    return this._client.get<{ physicians: Physician[] }>(`${this._baseUrl}api/physicians/nearest/${options.longitude}/${options.latitude}`)\n      .pipe(\n        map(x => x.physicians)\n      );\n  }\n\n  public searc(options: { query: string }): Observable<Physician[]> {\n    return this._client.get<{ physicians: Physician[] }>(`${this._baseUrl}api/physicians/${options.query}`)\n      .pipe(\n        map(x => x.physicians)\n      );\n  }\n\n  public get(): Observable<Physician[]> {\n    return this._client.get<{ physicians: Physician[] }>(`${this._baseUrl}api/physicians`)\n      .pipe(\n        map(x => x.physicians)\n      );\n  }\n\n  public getById(options: { physicianId: number }): Observable<Physician> {\n    return this._client.get<{ physician: Physician }>(`${this._baseUrl}api/physicians/${options.physicianId}`)\n      .pipe(\n        map(x => x.physician)\n      );\n  }\n\n  public remove(options: { physician: Physician }): Observable<void> {\n    return this._client.delete<void>(`${this._baseUrl}api/physicians/${options.physician.physicianId}`);\n  }\n\n  public save(options: { physician: Physician }): Observable<{ physicianId: number }> {\n    return this._client.post<{ physicianId: number }>(`${this._baseUrl}api/physicians`, { physician: options.physician });\n  }  \n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PhysiciansService } from '../physicians.service';\nimport { Observable, Subject } from 'rxjs';\nimport { Physician } from '../physician';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { FooterRowOutlet } from '@angular/cdk/table';\n\n@Component({\n  selector: 'pl-physicians',\n  templateUrl: './physicians.component.html',\n  styleUrls: ['./physicians.component.scss', './foo.component.scss']\n})\nexport class PhysiciansComponent implements OnDestroy {\n\n  private readonly _destroyed: Subject<void> = new Subject();\n  \n  public columnsToDisplay: string[] = [\n    'firstname',\n    'lastname',\n    'street',\n    'emailAddress',\n    'phoneNumber',\n    'edit'\n  ];\n\n  public dataSource$ = this.physiciansService.get().pipe(\n    takeUntil(this._destroyed),\n    map(x => new MatTableDataSource(x))\n  );\n\n  constructor(\n    private physiciansService: PhysiciansService,\n    private router: Router\n  ) { }\n\n  public handleEditClick(physician: Physician): void {\n    this.router.navigateByUrl(`physicians/edit/${physician.physicianId}`);\n  }\n\n  public handleCreateClick(): void {\n    this.router.navigateByUrl('physicians/create');\n  }\n  \n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","<h1>Physicians</h1>\r\n\r\n<button mat-raised-button (click)='handleCreateClick()'>Create</button>\r\n\r\n<table *ngIf=\"dataSource$ | async as dataSource\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n    <ng-container matColumnDef=\"firstname\">\r\n        <th mat-header-cell *matHeaderCellDef> Firstname </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.firstname }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastname\">\r\n        <th mat-header-cell *matHeaderCellDef> Lastname </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.lastname }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"street\">\r\n        <th mat-header-cell *matHeaderCellDef> Street </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.street }} </td>\r\n    </ng-container>        \r\n\r\n    <ng-container matColumnDef=\"phoneNumber\">\r\n        <th mat-header-cell *matHeaderCellDef> Phone </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.phoneNumber }} </td>\r\n    </ng-container>        \r\n    \r\n    <ng-container matColumnDef=\"emailAddress\">\r\n        <th mat-header-cell *matHeaderCellDef> Email </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.emailAddress }} </td>\r\n    </ng-container>        \r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td style=\"width:100px\" mat-cell *matCellDef=\"let physician\">\r\n          <button mat-icon-button (click)=\"handleEditClick(physician)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let data; columns: columnsToDisplay\"></tr>\r\n\r\n</table>\r\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_core/auth.guard.ts","webpack:///src/app/_core/auth.service.ts","webpack:///src/app/_core/constants.ts","webpack:///src/app/_core/core.module.ts","webpack:///src/app/_core/headers.interceptor.ts","webpack:///src/app/_core/jwt.interceptor.ts","webpack:///src/app/_shared/shared.module.ts","webpack:///src/app/app-container.component.ts","webpack:///src/app/app-container.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login-page.component.ts","webpack:///src/app/login/login-page.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","_router","next","state","token","localStorage","getItem","navigateByUrl","providedIn","AuthService","_baseUrl","_httpClient","setItem","options","post","pipe","response","accessToken","baseUrl","storageKey","currentUserKey","accessTokenKey","CoreModule","provide","useClass","multi","declarations","providers","imports","HeadersInterceptor","request","handle","clone","headers","set","JwtInterceptor","router","httpEvent","error","status","SharedModule","AppContainerComponent","selector","templateUrl","styleUrls","routes","path","component","children","canActivate","loadChildren","m","PhysiciansModule","AppRoutingModule","forRoot","AppComponent","AppModule","useValue","bootstrap","LoginPageComponent","authService","_destroyed","$event","tryToLogin","username","password","subscribe","errorResponse","complete","handleTryToLogin","LoginComponent","renderer","form","required","selectRootElement","focus","LoginModule","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { accessTokenKey } from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _router: Router) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      const token = localStorage.getItem(accessTokenKey) || '';\n      \n      if(token) {\n        return true;\n      }\n      \n      this._router.navigateByUrl('/login');\n      \n      return false;\n  }\n  \n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { accessTokenKey, baseUrl, storageKey } from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(\n    @Inject(baseUrl) private _baseUrl: string,\n    private _httpClient: HttpClient\n  ) {}\n\n  public logout() {\n    localStorage.setItem(accessTokenKey, null);\n  }\n\n  public tryToLogin(options: { username: string; password: string }) {\n    return this._httpClient.post<any>(`${this._baseUrl}api/users/token`, options).pipe(\n      map(response => {\n        localStorage.setItem(accessTokenKey, response.accessToken);\n        return response.accessToken;\n      })\n    );\n  }\n}","export const baseUrl = 'baseUrl';\r\nexport const storageKey = 'PhysicianLookup';\r\nexport const currentUserKey = `${storageKey}:currentUser`;\r\nexport const accessTokenKey = `${storageKey}:accessToken`;","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './auth.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { JwtInterceptor } from './jwt.interceptor';\nimport { HeadersInterceptor } from './headers.interceptor';\n\n@NgModule({\n  declarations: [],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HeadersInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    },    \n    AuthService,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule\n  ]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { accessTokenKey } from './constants';\n\n@Injectable()\nexport class HeadersInterceptor implements HttpInterceptor {\n  \n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = localStorage.getItem(accessTokenKey) || '';\n\n    return next.handle(request.clone({\n      headers: request.headers.set('Authorization', `Bearer ${token}`)\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { accessTokenKey } from './constants';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(\n    private router: Router\n  ) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      tap((httpEvent: HttpEvent<any>) => httpEvent,\n      error => {\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          localStorage.setItem(accessTokenKey, null);\n          this.router.navigateByUrl('/login');\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '../_core/core.module';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatListModule,\n    MatTableModule,\n    MatSnackBarModule,\n\n    CoreModule\n  ],\n  exports:[\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatListModule,\n    MatTableModule,\n    MatSnackBarModule,\n\n    CoreModule\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pl-app-container',\n  templateUrl: './app-container.component.html',\n  styleUrls: ['./app-container.component.scss']\n})\nexport class AppContainerComponent { }\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPageComponent } from './login/login-page.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './_core/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: \"login\", component: LoginPageComponent },\r\n  {\r\n    path: \"\",\r\n    component: AppComponent,\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        canActivate:[AuthGuard],\r\n        loadChildren: () => import(\"src/app/physicians/physicians.module\").then(m => m.PhysiciansModule)\r\n      },\r\n    ],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pl-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","<mat-toolbar class=\"mat-elevation-z6\" color=\"primary\">\r\n    <button mat-icon-button (click)=\"drawer.toggle()\">\r\n        <mat-icon>menu</mat-icon>\r\n    </button>\r\n    \r\n    <h1>Tik Doc</h1>\r\n\r\n</mat-toolbar>  \r\n\r\n<mat-sidenav-container>\r\n    <mat-sidenav #drawer mode=\"side\" (click)=\"drawer.close()\">\r\n      <button mat-button routerLink=\"/\">Physicians</button>\r\n      <button mat-button routerLink=\"/login\">Logout</button>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content>\r\n      <div class=\"router-outlet-container\">\r\n        <router-outlet #router></router-outlet>\r\n      </div>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginModule } from './login/login.module';\r\nimport { AppContainerComponent } from './app-container.component';\r\nimport { baseUrl } from './_core/constants';\r\nimport { SharedModule } from './_shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AppContainerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    LoginModule,\r\n    SharedModule\r\n  ],\r\n  providers: [{\r\n    provide: baseUrl,\r\n    useValue: \"https://localhost:5001/\"\r\n\r\n  }],\r\n  bootstrap: [AppContainerComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../_core/auth.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'pl-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnDestroy {\n\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  public handleTryToLogin($event: { username: string, password: string }) {\n    this.authService\n    .tryToLogin({\n      username: $event.username,\n      password: $event.password\n    })\n    .pipe(\n      takeUntil(this._destroyed),\n    )\n    .subscribe(\n      () => {\n        this.router.navigateByUrl('/');\n      },\n      errorResponse => {\n        // handle error response\n      }\n    );  \n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","<pl-login (tryToLogin)='handleTryToLogin($event)'></pl-login>","import { Component, Output, EventEmitter, Renderer2, AfterContentInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'pl-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements AfterContentInit {\n\n  public username: string;\n  public password: string;\n\n  public form = new FormGroup({\n    username: new FormControl(this.username, [Validators.required]),\n    password: new FormControl(this.password, [Validators.required])\n  });\n  \n  @Output() public tryToLogin: EventEmitter<{ username: string, password: string }> = new EventEmitter();\n\n  constructor(private renderer: Renderer2) { }\n\n  ngAfterContentInit(): void { this.renderer.selectRootElement('#username').focus(); }\n}\n","  \n<mat-card>\n  <mat-card-title>\n    Sign in to Tik Doc\n  </mat-card-title>\n  \n  <form novalidate autocomplete='off' spellcheck='false' [formGroup]='form'>\n      <mat-form-field>\n        <input matInput placeholder='Username'\n               id='username'\n               formControlName='username' required>\n      </mat-form-field>\n  \n      <mat-form-field>\n        <input matInput\n               placeholder='Password'\n               id='password'\n               formControlName='password'\n               type='password'\n               required>\n      </mat-form-field>\n    </form>\n\n    <button mat-raised-button color='primary'\n    (click)='tryToLogin.emit(form.value)'\n    [disabled]='!form.valid'>Submit</button>\n    \n  </mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { LoginPageComponent } from './login-page.component';\nimport { SharedModule } from '../_shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    LoginPageComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}
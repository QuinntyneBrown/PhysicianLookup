{"version":3,"sources":["webpack:///src/app/physicians/edit-physician/edit-physician.component.ts","webpack:///src/app/physicians/edit-physician/edit-physician.component.html","webpack:///src/app/physicians/physicians-routing.module.ts","webpack:///src/app/physicians/physicians.module.ts","webpack:///src/app/physicians/physicians.service.ts","webpack:///src/app/physicians/physicians/physicians.component.ts","webpack:///src/app/physicians/physicians/physicians.component.html"],"names":["EditPhysicianComponent","activatedRoute","physiciansService","router","physician","_destroyed","form","firstname","required","lastname","street","city","province","postalCode","phoneNumber","emailAddress","email","website","physicianId","snapshot","params","id","getById","pipe","x","patchValue","subscribe","value","save","reset","errorResponse","navigateByUrl","next","complete","handleSaveClick","handleCancelClick","selector","templateUrl","styleUrls","routes","path","component","PhysiciansRoutingModule","forChild","imports","exports","PhysiciansModule","declarations","providers","PhysiciansService","_baseUrl","_client","options","get","longitude","latitude","physicians","query","post","providedIn","PhysiciansComponent","columnsToDisplay","dataSource$","handleCreateClick"],"mappings":"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","file":"src-app-physicians-physicians-module-es5.js","sourcesContent":["import { Component, AfterViewInit, OnDestroy, OnInit } from '@angular/core';\nimport { PhysiciansService } from '../physicians.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Physician } from '../physician';\nimport { takeUntil, map } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'pl-edit-physician',\n  templateUrl: './edit-physician.component.html',\n  styleUrls: ['./edit-physician.component.scss']\n})\nexport class EditPhysicianComponent implements OnInit, OnDestroy {\n\n  public physician: Physician = {} as Physician;\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  public form = new FormGroup({     \n    firstname: new FormControl(this.physician.firstname, [Validators.required]),\n    lastname: new FormControl(this.physician.lastname, [Validators.required]), \n    street: new FormControl(this.physician.street, [Validators.required]),\n    city: new FormControl(this.physician.city, [Validators.required]),\n    province: new FormControl(this.physician.province, [Validators.required]),\n    postalCode: new FormControl(this.physician.postalCode, [Validators.required]),\n    phoneNumber: new FormControl(this.physician.phoneNumber, []),\n    emailAddress: new FormControl(this.physician.emailAddress, [Validators.email]),\n    website: new FormControl(this.physician.website, []),        \n  });\n  \n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private physiciansService: PhysiciansService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.physician.physicianId = this.activatedRoute.snapshot.params.id;\n\n    if(this.physician.physicianId) {\n      this.physiciansService.getById({ physicianId: this.activatedRoute.snapshot.params.id }).pipe(\n        map(x => {\n          this.form.patchValue({\n            firstname : x.firstname,\n            lastname : x.lastname,\n            street : x.street,\n            city : x.city,\n            province : x.province,\n            postalCode : x.postalCode,\n            phoneNumber : x.phoneNumber,\n            emailAddress : x.emailAddress,\n            website : x.website\n          });\n        })\n      ).subscribe();\n    }\n  }\n\n  public handleSaveClick(): void {\n    const physician: Physician = {} as Physician;\n\n    this.physician.firstname = this.form.value.firstname;\n    this.physician.lastname = this.form.value.lastname;\n    this.physician.street = this.form.value.street;\n    this.physician.city = this.form.value.city;\n    this.physician.province = this.form.value.province;\n    this.physician.postalCode = this.form.value.postalCode;\n    this.physician.phoneNumber = this.form.value.phoneNumber;\n    this.physician.emailAddress = this.form.value.emailAddress;\n    this.physician.website = this.form.value.website;\n\n    this.physiciansService.save({ physician: this.physician }).pipe(\n      takeUntil(this._destroyed)\n    ).subscribe(\n      () => this.form.reset(),\n      errorResponse => {\n        // handle error\n      }\n    );\n\n  }\n\n  public handleCancelClick(): void {\n    this.router.navigateByUrl('/');\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","<h1 *ngIf=\"!physician.physicianId\">Create Physician</h1>\n\n<h1 *ngIf=\"physician.physicianId\">Edit Physician</h1>\n\n<form novalidate autocomplete=\"off\" spellcheck=\"false\" [formGroup]=\"form\">\n    <mat-form-field>\n        <input matInput placeholder=\"Firstname\" id=\"firstname\" formControlName=\"firstname\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Lastname\" id=\"lastname\" formControlName=\"lastname\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Street\" id=\"street\" formControlName=\"street\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"City\" id=\"city\" formControlName=\"city\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Province\" id=\"province\" formControlName=\"province\">\n      </mat-form-field>      \n\n      <mat-form-field>\n        <input matInput placeholder=\"Postal Code\" id=\"postalCode\" formControlName=\"postalCode\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Phone Number\" id=\"phoneNumber\" formControlName=\"phoneNumber\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Email Address\" id=\"emailAddress\" formControlName=\"emailAddress\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Website\" id=\"website\" formControlName=\"website\">\n      </mat-form-field>\n\n</form>\n\n<div class=\"physicianEditor__actions\">\n  <button mat-raised-button (click)=\"handleSaveClick()\" color=\"primary\">Save</button>\n  <button mat-button (click)=\"handleCancelClick()\">Cancel</button>\n</div>","import { RouterModule, Routes } from \"@angular/router\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { PhysiciansComponent } from './physicians/physicians.component';\r\nimport { EditPhysicianComponent } from './edit-physician/edit-physician.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: PhysiciansComponent },\r\n  { path: \"physicians/create\", component: EditPhysicianComponent },\r\n  { path: \"physicians/edit/:id\", component: EditPhysicianComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PhysiciansRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PhysiciansComponent } from './physicians/physicians.component';\nimport { PhysiciansRoutingModule } from './physicians-routing.module';\nimport { EditPhysicianComponent } from './edit-physician/edit-physician.component';\nimport { PhysiciansService } from './physicians.service';\nimport { SharedModule } from '../_shared/shared.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [PhysiciansComponent, EditPhysicianComponent],\n  providers: [\n    PhysiciansService\n  ],\n  imports: [\n    CommonModule,\n    PhysiciansRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class PhysiciansModule { }\n","import { Injectable, Inject } from '@angular/core';\nimport { baseUrl } from '../_core/constants';\nimport { HttpClient } from '@angular/common/http';\nimport { Physician } from './physician';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhysiciansService {\n\n  constructor(\n    @Inject(baseUrl) private _baseUrl: string,\n    private _client: HttpClient\n  ) { }\n\n  public getNearest(options: {longitude: number, latitude: number}): Observable<Physician[]> {\n    return this._client.get<{ physicians: Physician[] }>(`${this._baseUrl}api/physicians/nearest/${options.longitude}/${options.latitude}`)\n      .pipe(\n        map(x => x.physicians)\n      );\n  }\n\n  public searc(options: { query: string }): Observable<Physician[]> {\n    return this._client.get<{ physicians: Physician[] }>(`${this._baseUrl}api/physicians/${options.query}`)\n      .pipe(\n        map(x => x.physicians)\n      );\n  }\n\n  public get(): Observable<Physician[]> {\n    return this._client.get<{ physicians: Physician[] }>(`${this._baseUrl}api/physicians`)\n      .pipe(\n        map(x => x.physicians)\n      );\n  }\n\n  public getById(options: { physicianId: number }): Observable<Physician> {\n    return this._client.get<{ physician: Physician }>(`${this._baseUrl}api/physicians/${options.physicianId}`)\n      .pipe(\n        map(x => x.physician)\n      );\n  }\n\n  public remove(options: { physician: Physician }): Observable<void> {\n    return this._client.delete<void>(`${this._baseUrl}api/physicians/${options.physician.physicianId}`);\n  }\n\n  public save(options: { physician: Physician }): Observable<{ physicianId: number }> {\n    return this._client.post<{ physicianId: number }>(`${this._baseUrl}api/physicians`, { physician: options.physician });\n  }  \n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PhysiciansService } from '../physicians.service';\nimport { Observable, Subject } from 'rxjs';\nimport { Physician } from '../physician';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { FooterRowOutlet } from '@angular/cdk/table';\n\n@Component({\n  selector: 'pl-physicians',\n  templateUrl: './physicians.component.html',\n  styleUrls: ['./physicians.component.scss', './foo.component.scss']\n})\nexport class PhysiciansComponent implements OnDestroy {\n\n  private readonly _destroyed: Subject<void> = new Subject();\n  \n  public columnsToDisplay: string[] = [\n    'firstname',\n    'lastname',\n    'street',\n    'emailAddress',\n    'phoneNumber',\n    'edit'\n  ];\n\n  public dataSource$ = this.physiciansService.get().pipe(\n    takeUntil(this._destroyed),\n    map(x => new MatTableDataSource(x))\n  );\n\n  constructor(\n    private physiciansService: PhysiciansService,\n    private router: Router\n  ) { }\n\n  public handleEditClick(physician: Physician): void {\n    this.router.navigateByUrl(`physicians/edit/${physician.physicianId}`);\n  }\n\n  public handleCreateClick(): void {\n    this.router.navigateByUrl('physicians/create');\n  }\n  \n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","<h1>Physicians</h1>\r\n\r\n<button mat-raised-button (click)='handleCreateClick()'>Create</button>\r\n\r\n<table *ngIf=\"dataSource$ | async as dataSource\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n    <ng-container matColumnDef=\"firstname\">\r\n        <th mat-header-cell *matHeaderCellDef> Firstname </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.firstname }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"lastname\">\r\n        <th mat-header-cell *matHeaderCellDef> Lastname </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.lastname }} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"street\">\r\n        <th mat-header-cell *matHeaderCellDef> Street </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.street }} </td>\r\n    </ng-container>        \r\n\r\n    <ng-container matColumnDef=\"phoneNumber\">\r\n        <th mat-header-cell *matHeaderCellDef> Phone </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.phoneNumber }} </td>\r\n    </ng-container>        \r\n    \r\n    <ng-container matColumnDef=\"emailAddress\">\r\n        <th mat-header-cell *matHeaderCellDef> Email </th>\r\n        <td mat-cell *matCellDef=\"let physician\"> {{ physician.emailAddress }} </td>\r\n    </ng-container>        \r\n\r\n    <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td style=\"width:100px\" mat-cell *matCellDef=\"let physician\">\r\n          <button mat-icon-button (click)=\"handleEditClick(physician)\">\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n    <tr mat-row *matRowDef=\"let data; columns: columnsToDisplay\"></tr>\r\n\r\n</table>\r\n"]}